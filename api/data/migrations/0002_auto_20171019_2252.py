# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-19 20:49
from __future__ import unicode_literals

import csv

from django.db import migrations

from data import models


def MigrateDataAll(apps, schema_editor):
    year, sector, program, rec, sit, source = [], [], [], [], [], []
    with open('data.csv') as csvfile:
        spamreader = csv.reader(csvfile, delimiter=',')
        data = []
        for i, row in enumerate(spamreader):
            if i == 0:
                pass
            else:
                data.append(row)
                if row[0] not in year:
                    year.append(row[0])
                sec = row[1] + '|' + row[2] + '|' + row[3]
                if sec not in sector:
                    sector.append(sec)
                pro = row[4] + '|' + row[5] + '|' + row[6] + '|' + row[7] + '|' + row[10]
                if pro not in program:
                    program.append(pro)
                if row[8] not in rec:
                    rec.append(row[8])
                if row[9] not in sit:
                    sit.append(row[9])
                if row[16] not in source:
                    source.append(row[16])

        models.Year.objects.bulk_create([models.Year(year=x) for x in year])
        models.Rec.objects.bulk_create([models.Rec(rec=x) for x in rec])
        models.Sit.objects.bulk_create([models.Sit(sit=x) for x in sit])
        models.Source.objects.bulk_create([models.Source(name=x) for x in source])

        for sec in sector:
            var = sec.split('|')
            models.Sector.objects.create(
                code=var[0],
                name=var[1],
                unit=var[2]
            )

        for pro in program:
            var = pro.split('|')
            models.Program.objects.create(
                prog=int(var[0]),
                subp=int(var[1]),
                proy=int(var[2]),
                subpr=int(var[3]),
                name=var[4]
            )

        year_list = models.Year.objects.all()
        sector_list = models.Sector.objects.all()
        program_list = models.Program.objects.all()
        rec_list = models.Rec.objects.all()
        sit_list = models.Sit.objects.all()
        source_list = models.Source.objects.all()

        investment = []
        for row in data:
            investment.append(models.Investment(
                year=year_list.get(year=row[0]),
                sector=sector_list.get(
                    code=row[1],
                    name=row[2],
                    unit=row[3]),
                program=program_list.get(
                    prog=row[4],
                    subp=row[5],
                    proy=row[6],
                    subpr=row[7],
                    name=row[10]
                ),
                rec=rec_list.get(rec=row[8]),
                sit=sit_list.get(sit=row[9]),
                source=source_list.get(name=row[16]),
                approval_init=row[11],
                approval_current=row[12],
                commitments=row[13],
                obligations=row[14],
                payments=row[15]
            ))
        models.Investment.objects.bulk_create(investment)


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(MigrateDataAll),
    ]
